# 初始化数据
  lui $1, 0x0000     # 设置 $1 为 0x1000 (4096)
  ori $1, $1, 0x1000 # 设置 $1 为 0x1000 (4096)
  lui $2, 0x0000     # 设置 $2 为 0x1000 (4096)
  ori $2, $2, 0x1000 # 设置 $2 为 0x1004 (4096 + 4)

# 测试 RAW 冒险
  lw $3, 0($1)       # 加载数据到 $3
  add $4, $3, $0     # $4 = $3
  sw $4, 0($2)       # 将 $4 的值存储到内存

lw $4, 0($1)       # 加载数据到 $4
sw $4, 4($2)

jal
sw

ori
ori
sw

add
add
sw

sub
sub
sw

lui
lui
sw

lw
lw
sw

# 测试 WAR 冒险
  sw $4, 4($2)       # 将 $4 的值存储到内存
  lw $5, 0($1)       # 加载数据到 $5

# 测试 WAW 冒险
  sw $4, 8($2)       # 将 $4 的值存储到内存
  sw $4, 12($2)      # 再次将 $4 的值存储到内存

# 测试控制冒险
  beq $4, $5, label  # 如果 $4 == $5，跳转到 label
  sw $4, 16($2)      # 将 $4 的值存储到内存
label:
  nop                # 无操作

# 测试结构冒险
  lw $6, 20($1)      # 加载数据到 $6
  sw $6, 24($2)      # 将 $6 的值存储到内存

# 测试多个 RAW 冒险
  ori $7, $0, 10     # $7 = 10
  ori $8, $0, 20     # $8 = 20
  add $9, $7, $8     # $9 = $7 + $8 = 30
  sw $9, 28($2)      # 将 $9 的值存储到内存

# 测试多个 WAR 冒险
  sw $9, 32($2)      # 将 $9 的值存储到内存
  ori $10, $0, 40    # $10 = 40
  add $9, $10, $10   # $9 = $10 + $10 = 80
  lw $9, 28($2)      # 加载数据到 $9

# 测试多个 WAW 冒险
  sw $9, 36($2)      # 将 $9 的值存储到内存
  ori $11, $0, 50    # $11 = 50
  add $9, $11, $11   # $9 = $11 + $11 = 100
  sw $9, 40($2)      # 将 $9 的值存储到内存

# 测试多个控制冒险
  beq $9, $10, label2 # 如果 $9 == $10，跳转到 label2
  sw $9, 44($2)      # 将 $9 的值存储到内存
label2:
  nop                # 无操作

# 测试多个结构冒险
  lw $12, 48($1)     # 加载数据到 $12
  sw $12, 52($2)     # 将 $12 的值存储到内存
  lw $13, 56($1)     # 加载数据到 $13
  sw $13, 60($2)     # 将 $13 的值存储到内存

# 测试复杂的组合冒险
  lw $14, 64($1)     # 加载数据到 $14
  ori $15, $0, 70    # $15 = 70
  add $16, $14, $15  # $16 = $14 + $15
  beq $16, $15, label3 # 如果 $16 == $15，跳转到 label3
  sw $16, 68($2)     # 将 $16 的值存储到内存
label3:
  nop                # 无操作

# 测试循环中的冒险
  ori $17, $0, 8     # $17 = 8
  ori $18, $0, 0     # $18 = 0
loop:
  lw $19, 72($1)     # 加载数据到 $19
  add $19, $19, $18  # $19 = $19 + $18
  sw $19, 76($2)     # 将 $19 的值存储到内存
  add $18, $18, $1   # $18 = $18 + 1
  beq $18, $17, end  # 如果 $18 == $17，结束循环
  j loop             # 跳转到 loop
end:
  nop                # 无操作